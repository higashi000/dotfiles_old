[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_path = '.*'
on_i = 1

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
on_i = 1
on_ft = ['snippet']

[[plugins]]
repo = 'neoclide/coc.nvim'
merge = 0
rev = 'release'
# hook_add {{{
hook_add = '''
set updatetime=100
set signcolumn=yes
function! s:show_docmentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocAction('doHover')
  endif
endfunction
autocmd CursorHold * silent call CocActionAsync('highlight')
nmap <leader> rn <Plug>(coc-rename)
nmap <silent> [c <Plug>(coc-diagnostic-prev)
nmap <silent> ]c <Plug>(coc-diagnostic-next)
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
" "nnoremap <silent> K :call CocAction('doHover')<CR>
nnoremap <silent> K :call <SID>show_docmentation()<CR>
nnoremap <silent> F :call CocAction('format')<CR>
'''
# }}}

[[plugins]]
repo = 'neoclide/coc-neco'

[[plugins]]
repo = 'roxma/nvim-yarp'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_i = 1

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_start_key = '<C-T>'
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'mattn/sonictemplate-vim'
# on_i = 1
#sonictemplate---{{{
hook_add = '''
  let g:sonictemplate_vim_template_dir = [
  \'~/.config/nvim/template'
    \]
'''

#---}}}

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'scrooloose/nerdtree'
# hook_add {{{
  hook_add = '''
    let g:NERDTreeDirArrow = 1
    let g:NERDTreeDirArrowExpandable = '▸'
    let g:NERDTreeDirArrowCollapsible = '▾'
    let g:NERDTreeDirArrowExpandable = '→'
    let g:NERDTreeDirArrowCollapsible = '↓'
    nnoremap <silent> <C-n> :NERDTreeToggle<CR>
    '''
#}}}

[[plugins]]
repo = 'vim-airline/vim-airline'
# airline settings ---{{{
  hook_add = '''
    let g:airline_powerline_fonts = 1
    let g:airline_theme = 'bubblegum'
    let g:airline#extensions#tabline#enabled = 1

    noremap <silent><Space>x :bdelete<CR>
    noremap <silent><Space>h :bprevious<CR>
    noremap <silent><Space>l :bnext<CR>
    '''
# airline settings ---}}}

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'LeafCage/foldCC.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'
# vim-gitgutter settings --- {{{
hook_add = '''
  nnoremap [gitgutter] <Nop>
  nmap <C-h> [gitgutter]
  nmap [gitgutter]j <Plug>GitGutterNextHunk
  nmap [gitgutter]k <Plug>GitGutterPrevHunk
  nmap [gitgutter]u <Plug>GitGutterUndoHunk
'''
# }}}

[[plugins]]
repo = 'tpope/vim-fugitive'
# vim-fugitive settings ---{{{
hook_add = '''
  command Gst :Gstatus
  command Gdf :Gdiff
  command Gbl :gblame
'''
# }}}

[[plugins]]
repo = 'osyo-manga/vim-anzu'
# anzu settings --- {{{
hook_add = '''
  nmap n <Plug>(anzu-n-with-echo)
  nmap N <Plug>(anzu-N-with-echo)
  nmap * <Plug>(anzu-star)
  nmap # <Plug>(anzu-sharp)
'''
#}}}

[[plugins]]
repo = 'elzr/vim-json'
hook_add = '''
let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'skanehira/translate.vim'

[[plugins]]
repo = 'higashi000/sarahck.vim'

[[plugins]]
repo = 'fatih/vim-go'
hook_add = '''
let g:go_def_mode='gopls'
let g:go_info_mode='gopls'
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'mattn/webapi-vim'
