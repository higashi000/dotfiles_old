let g:python3_host_prog = 'C:\Users\higashi\AppData\Local\Programs\Python\Python39\python'

call plug#begin('~/.vim/plugged')

Plug 'cocopon/iceberg.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'Shougo/deoplete.nvim'
Plug 'Shougo/neco-vim'
Plug 'lighttiger2505/deoplete-vim-lsp'
Plug 'Shougo/defx.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
Plug 'vim-denops/denops.vim'
Plug 'higashi000/dps-kakkonan'
Plug 'mattn/vim-sonictemplate'
Plug 'Yggdroot/indentLine'
Plug 'kristijanhusak/defx-icons'
Plug 'bronson/vim-trailing-whitespace'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'osyo-manga/vim-anzu'
Plug 'elzr/vim-json'
Plug 'cespare/vim-toml'
Plug 'vim-jp/vital.vim'
Plug 'tpope/vim-markdown'
Plug 'ryanoasis/vim-devicons'
Plug 'vim-jp/autofmt'
Plug 'vim-jp/vimdoc-ja'
Plug 'lambdalisue/readablefold.vim'
Plug 'lambdalisue/vim-backslash'

call plug#end()

let g:deoplete#enable_at_startup = 1

set number
syntax enable
colorscheme iceberg
set background=dark

set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab
set smarttab
set cindent

set hlsearch
set cursorcolumn
set foldmethod=marker
set tabline=2

set backspace=indent,eol,start

set helplang=ja,en

noremap <silent><C-x> :bdelete<CR>
noremap <silent><C-h> :bprevious<CR>
noremap <silent><C-l> :bnext<CR>

set ruler
set noerrorbells
set laststatus=2

noremap <silent> <ESC><ESC> :noh<CR>

let mapleader = "\<Space>"

noremap ; :

noremap j gj
noremap k gk

let g:vim_json_syntax_conceal = 0

noremap <silent> <Leader>d :LspDefinition<CR>
noremap <silent> <Leader>f :LspDocumentFormat<CR>
noremap <silent> <Leader>h :LspHover<CR>
noremap <silent> <Leader>r :LspRename<CR>
noremap <silent> <Leader>ne :LspNextError<CR>
noremap <silent> <Leader>pe :LspPreviousError<CR>
noremap <silent> <Leader>td :LspTypeDefinition<CR>

let g:lsp_log_verbose = 0

let g:airline_powerline_fonts = 1
let g:airline_theme = 'iceberg'
let g:airline#extensions#tabline#enabled = 1

nmap n <Plug>(anzu-n-with-echo)
nmap N <Plug>(anzu-N-with-echo)
nmap * <Plug>(anzu-star)
nmap # <Plug>(anzu-sharp)

set statusline=%{anzu#search_status()}

autocmd FileType defx call s:defx_my_settings()

function! s:defx_my_settings() abort
    " Define mappings
    nnoremap <silent><buffer><expr> <CR>
                \ defx#do_action('drop')
    nnoremap <silent><buffer><expr> c
                \ defx#do_action('copy')
    nnoremap <silent><buffer><expr> p
                \ defx#do_action('paste')
    nnoremap <silent><buffer><expr> l
                \ defx#do_action('drop')
    nnoremap <silent><buffer><expr> v
                \ defx#do_action('open', 'vsplit')
    nnoremap <silent><buffer><expr> t
                \ defx#do_action('open_tree', 'toggle')
    nnoremap <silent><buffer><expr> P
                \ defx#do_action('preview')
    nnoremap <silent><buffer><expr> ND
                \ defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> NF
                \ defx#do_action('new_file')
    nnoremap <silent><buffer><expr> C
                \ defx#do_action('toggle_columns',
                \                'mark:indent:icon:filename:type:size:time')
    nnoremap <silent><buffer><expr> S
                \ defx#do_action('toggle_sort', 'time')
    nnoremap <silent><buffer><expr> d
                \ defx#do_action('remove')
    nnoremap <silent><buffer><expr> r
                \ defx#do_action('rename')
    nnoremap <silent><buffer><expr> !
                \ defx#do_action('execute_command')
    nnoremap <silent><buffer><expr> x
                \ defx#do_action('execute_system')
    nnoremap <silent><buffer><expr> yy
                \ defx#do_action('yank_path')
    nnoremap <silent><buffer><expr> .
                \ defx#do_action('toggle_ignored_files')
    nnoremap <silent><buffer><expr> ;
                \ defx#do_action('repeat')
    nnoremap <silent><buffer><expr> h
                \ defx#do_action('cd', ['..'])
    nnoremap <silent><buffer><expr> ~
                \ defx#do_action('cd')
    nnoremap <silent><buffer><expr> q
                \ defx#do_action('quit')
    nnoremap <silent><buffer><expr> <Space>
                \ defx#do_action('toggle_select') . 'j'
    nnoremap <silent><buffer><expr> *
                \ defx#do_action('toggle_select_all')
    nnoremap <silent><buffer><expr> j
                \ line('.') == line('$') ? 'gg' : 'j'
    nnoremap <silent><buffer><expr> k
                \ line('.') == 1 ? 'G' : 'k'
    nnoremap <silent><buffer><expr> <C-l>
                \ defx#do_action('redraw')
    nnoremap <silent><buffer><expr> <C-g>
                \ defx#do_action('print')
    nnoremap <silent><buffer><expr> cd
                \ defx#do_action('change_vim_cwd')
endfunction
noremap <silent> <C-n> :Defx<CR>

call defx#custom#option('_', {
            \ 'winwidth': 40,
            \ 'split': 'vertical',
            \ 'direction': 'topleft',
            \ 'show_ignored_files': 0,
            \ 'toggle': 1,
            \ 'columns': 'indent:icons:filename:mark',
            \ })

set completeopt-=preview

let g:denops#script#typecheck = 1

set runtimepath+=/home/higashi/go/src/github.com/higashi000/dps-kakkonan
vmap ( <Plug>(dps_kakkonan_surround_parenthesis)
vmap { <Plug>(dps_kakkonan_surround_curly)
vmap [ <Plug>(dps_kakkonan_surround_square)
vmap " <Plug>(dps_kakkonan_surround_doublequote)
vmap ' <Plug>(dps_kakkonan_surround_singlequote)
vmap ` <Plug>(dps_kakkonan_surround_backquote)

let g:kakkonan_custom_brackets = {
            \ "h1": {
                \ "start": "<h1>",
                \ "finish": "</h1>"
                \ },
                \ "script": {
                    \ "start": "<script>",
                    \ "finish": "</script>"
                    \ },
                    \ "<": {
                        \ "start": "<",
                        \ "finish": ">"
                        \ },
                        \ }

map rp( <Plug>(dps_kakkonan_replace_parenthesis)
map rp{ <Plug>(dps_kakkonan_replace_curly)
map rp[ <Plug>(dps_kakkonan_replace_square)
map rp" <Plug>(dps_kakkonan_replace_doublequote)
map rp' <Plug>(dps_kakkonan_replace_singlequote)
map rp` <Plug>(dps_kakkonan_replace_backquote)

set guifont=Cica:h11:cANSI:qDRAFT
